#edit-mode: -*- python -*-
#coding:gbk

#工作路径.
WORKROOT('../../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-g -pipe -W -Wall -fPIC')

#C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -fPIC')

#IDL编译参数
IDLFLAGS('--compack')

#UBRPC编译参数
UBRPCFLAGS('--compack')

#头文件路径.
INCPATHS('. ./include ./output ./output/include')

#使用库
#LIBS('./libbc.a')

#链接参数.
LDFLAGS('-lpthread -lcrypto -lrt')

#依赖模块
CONFIGS('com/btest/googlemock@googlemock_1-0-0-0_PD_BL')
CONFIGS('com/btest/gtest@gtest_1-1-1-0_PD_BL')
CONFIGS('lib2-64/bsl@bsl_1-1-7-0_PD_BL')
CONFIGS('lib2-64/cache@cache_3-1-3-2_PD_BL')
CONFIGS('lib2-64/ccode@ccode_3-5-20-3_PD_BL')
CONFIGS('lib2-64/dict@dict_3-1-15-0_PD_BL')
CONFIGS('lib2-64/others-ex@others-ex_3-1-7-0_PD_BL')
CONFIGS('lib2-64/ullib@ullib_3-1-77-0_PD_BL')
CONFIGS('lib2-64/string@string_1-0-2-0_PD_BL')
CONFIGS('ps/se/acbcpub@acbcpub_1-2-172-0_PD_BL ')
CONFIGS('ps/se/cluster@cluster_1-0-0-2_PD_BL')
CONFIGS('ps/se/common@common_1-0-15-0_PD_BL')
CONFIGS('ps/se/conf-manager@conf-manager_1-0-3-0_PD_BL')
CONFIGS('ps/se/debug@debug_1-0-24-0_PD_BL')
CONFIGS('ps/se/dict-manager@dict-manager_1-0-2-0_PD_BL')
CONFIGS('ps/se/dict-set@dict-set_1-1-32-1_PD_BL')
CONFIGS('ps/se/gs@gs_2-0-3-566514_PD_BL')
CONFIGS('ps/se/hd-cache@hd-cache_1-0-13-0_PD_BL')
CONFIGS('ps/se/include@include_1-4-627-2_PD_BL')
CONFIGS('ps/se/libheartbeat@libheartbeat_1-0-18-0_PD_BL')
CONFIGS('ps/se/libmonitor@libmonitor_1-0-4-0_PD_BL')
CONFIGS('ps/se/metapool@metapool_1-0-4-0_PD_BL')
CONFIGS('ps/se/midmock@midmock_1-0-1-1_PD_BL')
CONFIGS('ps/se/result-masker@result-masker_1-0-22-1_PD_BL')
CONFIGS('ps/se/rt-compress@rt-compress_1-0-0-3_PD_BL')
CONFIGS('ps/se/zcacheapi-ps@zcacheapi-ps_1-0-8-0_PD_BL')
CONFIGS('public/bslext@bslext_1-1-7-0_PD_BL')
CONFIGS('public/comlog-plugin@comlog-plugin_1-0-6-1_PD_BL')
CONFIGS('public/configure@configure_1-2-1-0_PD_BL')
CONFIGS('public/connectpool@connectpool_2-0-7-0_PD_BL')
CONFIGS('ps/se/authependingpool@authependingpool_1-0-0-1_PD_BL')
CONFIGS('public/ependingpool@ependingpool_1-0-3-3_PD_BL')
CONFIGS('public/gm/galileo@galileo_1-0-20-6_PD_BL')
CONFIGS('public/gm/zcacheapi@zcacheapi_1-0-31-0_PD_BL')
CONFIGS('public/idlcompiler@idlcompiler_2-0-6-0_PD_BL')
CONFIGS('public/kylin@kylin_1-0-6-0_PD_BL')
CONFIGS('public/mcpack@mcpack_1-3-7-0_PD_BL')
CONFIGS('public/ns/mynet@mynet_1-0-2-0_PD_BL')
CONFIGS('public/nshead@nshead_1-0-8-0_PD_BL')
CONFIGS('public/odict@odict_1-1-2-1_PD_BL')
CONFIGS('public/spreg@spreg_1-0-2-0_PD_BL')
CONFIGS('public/ub@ub_1-1-3-1_PD_BL')
CONFIGS('public/uconv@uconv_1-1-3-0_PD_BL')
CONFIGS('public/urlparser@urlparser_1-2-2-1_PD_BL')
CONFIGS('quality/autotest/reportlib/cpp@cpp_2-0-1-1_PD_BL')
CONFIGS('third-64/boost@boost_1-33-1-100_PD_BL')
CONFIGS('third-64/cppunit@cppunit_1-12-1-100_PD_BL')
CONFIGS('third-64/json-c@json-c_0-9-0-100_PD_BL')
CONFIGS('third-64/libxml2@libxml2_2-6-30-201_PD_BL')
CONFIGS('third-64/pcre@pcre_7-7-0-0_PD_BL')
CONFIGS('third-64/stlport@stlport_4-6-2-100_PD_BL')
CONFIGS('third-64/protobuf@protobuf_2-4-1-300_PD_BL')
CONFIGS('ps/se/classified-request@classified-request_1-0-2-0_PD_BL')
CONFIGS('com/btest/gtest@gtest_1-1-3-0_PD_BL')

#为32位/64位指定不同的依赖路径.
#CONFIGS_32('lib2/ullib')
#CONFIGS_64('lib2-64/ullib')

user_sources=''
user_headers=''

#可执行文件
#Application('bc',Sources(user_sources))
#静态库
#StaticLibrary('bc',Sources(user_sources),HeaderFiles(user_headers))
#共享库
#SharedLibrary('bc',Sources(user_sources),HeaderFiles(user_headers))
#子目录
#Directory('demo')

